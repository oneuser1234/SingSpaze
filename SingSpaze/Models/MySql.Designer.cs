//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace SingSpaze.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class singspazeEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new singspazeEntities object using the connection string found in the 'singspazeEntities' section of the application configuration file.
        /// </summary>
        public singspazeEntities() : base("name=singspazeEntities", "singspazeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new singspazeEntities object.
        /// </summary>
        public singspazeEntities(string connectionString) : base(connectionString, "singspazeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new singspazeEntities object.
        /// </summary>
        public singspazeEntities(EntityConnection connection) : base(connection, "singspazeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<album> album
        {
            get
            {
                if ((_album == null))
                {
                    _album = base.CreateObjectSet<album>("album");
                }
                return _album;
            }
        }
        private ObjectSet<album> _album;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<artist> artist
        {
            get
            {
                if ((_artist == null))
                {
                    _artist = base.CreateObjectSet<artist>("artist");
                }
                return _artist;
            }
        }
        private ObjectSet<artist> _artist;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<genre> genre
        {
            get
            {
                if ((_genre == null))
                {
                    _genre = base.CreateObjectSet<genre>("genre");
                }
                return _genre;
            }
        }
        private ObjectSet<genre> _genre;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<language> language
        {
            get
            {
                if ((_language == null))
                {
                    _language = base.CreateObjectSet<language>("language");
                }
                return _language;
            }
        }
        private ObjectSet<language> _language;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<playlist> playlist
        {
            get
            {
                if ((_playlist == null))
                {
                    _playlist = base.CreateObjectSet<playlist>("playlist");
                }
                return _playlist;
            }
        }
        private ObjectSet<playlist> _playlist;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<playlisttosong> playlisttosong
        {
            get
            {
                if ((_playlisttosong == null))
                {
                    _playlisttosong = base.CreateObjectSet<playlisttosong>("playlisttosong");
                }
                return _playlisttosong;
            }
        }
        private ObjectSet<playlisttosong> _playlisttosong;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<publisher> publisher
        {
            get
            {
                if ((_publisher == null))
                {
                    _publisher = base.CreateObjectSet<publisher>("publisher");
                }
                return _publisher;
            }
        }
        private ObjectSet<publisher> _publisher;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<publisherforartist> publisherforartist
        {
            get
            {
                if ((_publisherforartist == null))
                {
                    _publisherforartist = base.CreateObjectSet<publisherforartist>("publisherforartist");
                }
                return _publisherforartist;
            }
        }
        private ObjectSet<publisherforartist> _publisherforartist;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<publisherforsong> publisherforsong
        {
            get
            {
                if ((_publisherforsong == null))
                {
                    _publisherforsong = base.CreateObjectSet<publisherforsong>("publisherforsong");
                }
                return _publisherforsong;
            }
        }
        private ObjectSet<publisherforsong> _publisherforsong;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<singinghistory> singinghistory
        {
            get
            {
                if ((_singinghistory == null))
                {
                    _singinghistory = base.CreateObjectSet<singinghistory>("singinghistory");
                }
                return _singinghistory;
            }
        }
        private ObjectSet<singinghistory> _singinghistory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<song> song
        {
            get
            {
                if ((_song == null))
                {
                    _song = base.CreateObjectSet<song>("song");
                }
                return _song;
            }
        }
        private ObjectSet<song> _song;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<status> status
        {
            get
            {
                if ((_status == null))
                {
                    _status = base.CreateObjectSet<status>("status");
                }
                return _status;
            }
        }
        private ObjectSet<status> _status;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<user> user
        {
            get
            {
                if ((_user == null))
                {
                    _user = base.CreateObjectSet<user>("user");
                }
                return _user;
            }
        }
        private ObjectSet<user> _user;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<viewhistory> viewhistory
        {
            get
            {
                if ((_viewhistory == null))
                {
                    _viewhistory = base.CreateObjectSet<viewhistory>("viewhistory");
                }
                return _viewhistory;
            }
        }
        private ObjectSet<viewhistory> _viewhistory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<wtbtokens> wtbtokens
        {
            get
            {
                if ((_wtbtokens == null))
                {
                    _wtbtokens = base.CreateObjectSet<wtbtokens>("wtbtokens");
                }
                return _wtbtokens;
            }
        }
        private ObjectSet<wtbtokens> _wtbtokens;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the album EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToalbum(album album)
        {
            base.AddObject("album", album);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the artist EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToartist(artist artist)
        {
            base.AddObject("artist", artist);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the genre EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTogenre(genre genre)
        {
            base.AddObject("genre", genre);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the language EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTolanguage(language language)
        {
            base.AddObject("language", language);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the playlist EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToplaylist(playlist playlist)
        {
            base.AddObject("playlist", playlist);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the playlisttosong EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToplaylisttosong(playlisttosong playlisttosong)
        {
            base.AddObject("playlisttosong", playlisttosong);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the publisher EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTopublisher(publisher publisher)
        {
            base.AddObject("publisher", publisher);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the publisherforartist EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTopublisherforartist(publisherforartist publisherforartist)
        {
            base.AddObject("publisherforartist", publisherforartist);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the publisherforsong EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTopublisherforsong(publisherforsong publisherforsong)
        {
            base.AddObject("publisherforsong", publisherforsong);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the singinghistory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosinginghistory(singinghistory singinghistory)
        {
            base.AddObject("singinghistory", singinghistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the song EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosong(song song)
        {
            base.AddObject("song", song);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the status EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTostatus(status status)
        {
            base.AddObject("status", status);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the user EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTouser(user user)
        {
            base.AddObject("user", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the viewhistory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToviewhistory(viewhistory viewhistory)
        {
            base.AddObject("viewhistory", viewhistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the wtbtokens EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTowtbtokens(wtbtokens wtbtokens)
        {
            base.AddObject("wtbtokens", wtbtokens);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="singspazeModel", Name="album")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class album : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new album object.
        /// </summary>
        /// <param name="album_id">Initial value of the album_id property.</param>
        /// <param name="album_description_th">Initial value of the album_description_th property.</param>
        /// <param name="album_description_en">Initial value of the album_description_en property.</param>
        public static album Createalbum(global::System.Int64 album_id, global::System.String album_description_th, global::System.String album_description_en)
        {
            album album = new album();
            album.album_id = album_id;
            album.album_description_th = album_description_th;
            album.album_description_en = album_description_en;
            return album;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 album_id
        {
            get
            {
                return _album_id;
            }
            set
            {
                if (_album_id != value)
                {
                    Onalbum_idChanging(value);
                    ReportPropertyChanging("album_id");
                    _album_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("album_id");
                    Onalbum_idChanged();
                }
            }
        }
        private global::System.Int64 _album_id;
        partial void Onalbum_idChanging(global::System.Int64 value);
        partial void Onalbum_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String album_description_th
        {
            get
            {
                return _album_description_th;
            }
            set
            {
                Onalbum_description_thChanging(value);
                ReportPropertyChanging("album_description_th");
                _album_description_th = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("album_description_th");
                Onalbum_description_thChanged();
            }
        }
        private global::System.String _album_description_th;
        partial void Onalbum_description_thChanging(global::System.String value);
        partial void Onalbum_description_thChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String album_description_en
        {
            get
            {
                return _album_description_en;
            }
            set
            {
                Onalbum_description_enChanging(value);
                ReportPropertyChanging("album_description_en");
                _album_description_en = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("album_description_en");
                Onalbum_description_enChanged();
            }
        }
        private global::System.String _album_description_en;
        partial void Onalbum_description_enChanging(global::System.String value);
        partial void Onalbum_description_enChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="singspazeModel", Name="artist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class artist : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new artist object.
        /// </summary>
        /// <param name="artist_id">Initial value of the artist_id property.</param>
        /// <param name="artist_description_th">Initial value of the artist_description_th property.</param>
        /// <param name="artist_description_en">Initial value of the artist_description_en property.</param>
        /// <param name="artist_view">Initial value of the artist_view property.</param>
        public static artist Createartist(global::System.Int64 artist_id, global::System.String artist_description_th, global::System.String artist_description_en, global::System.Int32 artist_view)
        {
            artist artist = new artist();
            artist.artist_id = artist_id;
            artist.artist_description_th = artist_description_th;
            artist.artist_description_en = artist_description_en;
            artist.artist_view = artist_view;
            return artist;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 artist_id
        {
            get
            {
                return _artist_id;
            }
            set
            {
                if (_artist_id != value)
                {
                    Onartist_idChanging(value);
                    ReportPropertyChanging("artist_id");
                    _artist_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("artist_id");
                    Onartist_idChanged();
                }
            }
        }
        private global::System.Int64 _artist_id;
        partial void Onartist_idChanging(global::System.Int64 value);
        partial void Onartist_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String artist_description_th
        {
            get
            {
                return _artist_description_th;
            }
            set
            {
                Onartist_description_thChanging(value);
                ReportPropertyChanging("artist_description_th");
                _artist_description_th = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("artist_description_th");
                Onartist_description_thChanged();
            }
        }
        private global::System.String _artist_description_th;
        partial void Onartist_description_thChanging(global::System.String value);
        partial void Onartist_description_thChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String artist_description_en
        {
            get
            {
                return _artist_description_en;
            }
            set
            {
                Onartist_description_enChanging(value);
                ReportPropertyChanging("artist_description_en");
                _artist_description_en = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("artist_description_en");
                Onartist_description_enChanged();
            }
        }
        private global::System.String _artist_description_en;
        partial void Onartist_description_enChanging(global::System.String value);
        partial void Onartist_description_enChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String artist_type
        {
            get
            {
                return _artist_type;
            }
            set
            {
                Onartist_typeChanging(value);
                ReportPropertyChanging("artist_type");
                _artist_type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("artist_type");
                Onartist_typeChanged();
            }
        }
        private global::System.String _artist_type;
        partial void Onartist_typeChanging(global::System.String value);
        partial void Onartist_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 artist_view
        {
            get
            {
                return _artist_view;
            }
            set
            {
                Onartist_viewChanging(value);
                ReportPropertyChanging("artist_view");
                _artist_view = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("artist_view");
                Onartist_viewChanged();
            }
        }
        private global::System.Int32 _artist_view;
        partial void Onartist_viewChanging(global::System.Int32 value);
        partial void Onartist_viewChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String artist_picture
        {
            get
            {
                return _artist_picture;
            }
            set
            {
                Onartist_pictureChanging(value);
                ReportPropertyChanging("artist_picture");
                _artist_picture = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("artist_picture");
                Onartist_pictureChanged();
            }
        }
        private global::System.String _artist_picture;
        partial void Onartist_pictureChanging(global::System.String value);
        partial void Onartist_pictureChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="singspazeModel", Name="genre")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class genre : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new genre object.
        /// </summary>
        /// <param name="genre_id">Initial value of the genre_id property.</param>
        /// <param name="genre_description">Initial value of the genre_description property.</param>
        public static genre Creategenre(global::System.Int32 genre_id, global::System.String genre_description)
        {
            genre genre = new genre();
            genre.genre_id = genre_id;
            genre.genre_description = genre_description;
            return genre;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 genre_id
        {
            get
            {
                return _genre_id;
            }
            set
            {
                if (_genre_id != value)
                {
                    Ongenre_idChanging(value);
                    ReportPropertyChanging("genre_id");
                    _genre_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("genre_id");
                    Ongenre_idChanged();
                }
            }
        }
        private global::System.Int32 _genre_id;
        partial void Ongenre_idChanging(global::System.Int32 value);
        partial void Ongenre_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String genre_description
        {
            get
            {
                return _genre_description;
            }
            set
            {
                Ongenre_descriptionChanging(value);
                ReportPropertyChanging("genre_description");
                _genre_description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("genre_description");
                Ongenre_descriptionChanged();
            }
        }
        private global::System.String _genre_description;
        partial void Ongenre_descriptionChanging(global::System.String value);
        partial void Ongenre_descriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="singspazeModel", Name="language")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class language : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new language object.
        /// </summary>
        /// <param name="language_id">Initial value of the language_id property.</param>
        /// <param name="language_description">Initial value of the language_description property.</param>
        public static language Createlanguage(global::System.Int32 language_id, global::System.String language_description)
        {
            language language = new language();
            language.language_id = language_id;
            language.language_description = language_description;
            return language;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 language_id
        {
            get
            {
                return _language_id;
            }
            set
            {
                if (_language_id != value)
                {
                    Onlanguage_idChanging(value);
                    ReportPropertyChanging("language_id");
                    _language_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("language_id");
                    Onlanguage_idChanged();
                }
            }
        }
        private global::System.Int32 _language_id;
        partial void Onlanguage_idChanging(global::System.Int32 value);
        partial void Onlanguage_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String language_description
        {
            get
            {
                return _language_description;
            }
            set
            {
                Onlanguage_descriptionChanging(value);
                ReportPropertyChanging("language_description");
                _language_description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("language_description");
                Onlanguage_descriptionChanged();
            }
        }
        private global::System.String _language_description;
        partial void Onlanguage_descriptionChanging(global::System.String value);
        partial void Onlanguage_descriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="singspazeModel", Name="playlist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class playlist : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new playlist object.
        /// </summary>
        /// <param name="playlist_id">Initial value of the playlist_id property.</param>
        public static playlist Createplaylist(global::System.Int32 playlist_id)
        {
            playlist playlist = new playlist();
            playlist.playlist_id = playlist_id;
            return playlist;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 playlist_id
        {
            get
            {
                return _playlist_id;
            }
            set
            {
                if (_playlist_id != value)
                {
                    Onplaylist_idChanging(value);
                    ReportPropertyChanging("playlist_id");
                    _playlist_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("playlist_id");
                    Onplaylist_idChanged();
                }
            }
        }
        private global::System.Int32 _playlist_id;
        partial void Onplaylist_idChanging(global::System.Int32 value);
        partial void Onplaylist_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private Nullable<global::System.Int32> _user_id;
        partial void Onuser_idChanging(Nullable<global::System.Int32> value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String playlist_description
        {
            get
            {
                return _playlist_description;
            }
            set
            {
                Onplaylist_descriptionChanging(value);
                ReportPropertyChanging("playlist_description");
                _playlist_description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("playlist_description");
                Onplaylist_descriptionChanged();
            }
        }
        private global::System.String _playlist_description;
        partial void Onplaylist_descriptionChanging(global::System.String value);
        partial void Onplaylist_descriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> playlist_createdDatetime
        {
            get
            {
                return _playlist_createdDatetime;
            }
            set
            {
                Onplaylist_createdDatetimeChanging(value);
                ReportPropertyChanging("playlist_createdDatetime");
                _playlist_createdDatetime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("playlist_createdDatetime");
                Onplaylist_createdDatetimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _playlist_createdDatetime;
        partial void Onplaylist_createdDatetimeChanging(Nullable<global::System.DateTime> value);
        partial void Onplaylist_createdDatetimeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="singspazeModel", Name="playlisttosong")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class playlisttosong : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new playlisttosong object.
        /// </summary>
        /// <param name="playlisttosong_id">Initial value of the playlisttosong_id property.</param>
        /// <param name="playlist_id">Initial value of the playlist_id property.</param>
        /// <param name="song_id">Initial value of the song_id property.</param>
        /// <param name="playlistToSong_sequence">Initial value of the playlistToSong_sequence property.</param>
        public static playlisttosong Createplaylisttosong(global::System.Int32 playlisttosong_id, global::System.Int32 playlist_id, global::System.Int32 song_id, global::System.Int32 playlistToSong_sequence)
        {
            playlisttosong playlisttosong = new playlisttosong();
            playlisttosong.playlisttosong_id = playlisttosong_id;
            playlisttosong.playlist_id = playlist_id;
            playlisttosong.song_id = song_id;
            playlisttosong.playlistToSong_sequence = playlistToSong_sequence;
            return playlisttosong;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 playlisttosong_id
        {
            get
            {
                return _playlisttosong_id;
            }
            set
            {
                if (_playlisttosong_id != value)
                {
                    Onplaylisttosong_idChanging(value);
                    ReportPropertyChanging("playlisttosong_id");
                    _playlisttosong_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("playlisttosong_id");
                    Onplaylisttosong_idChanged();
                }
            }
        }
        private global::System.Int32 _playlisttosong_id;
        partial void Onplaylisttosong_idChanging(global::System.Int32 value);
        partial void Onplaylisttosong_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 playlist_id
        {
            get
            {
                return _playlist_id;
            }
            set
            {
                Onplaylist_idChanging(value);
                ReportPropertyChanging("playlist_id");
                _playlist_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("playlist_id");
                Onplaylist_idChanged();
            }
        }
        private global::System.Int32 _playlist_id;
        partial void Onplaylist_idChanging(global::System.Int32 value);
        partial void Onplaylist_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 song_id
        {
            get
            {
                return _song_id;
            }
            set
            {
                Onsong_idChanging(value);
                ReportPropertyChanging("song_id");
                _song_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("song_id");
                Onsong_idChanged();
            }
        }
        private global::System.Int32 _song_id;
        partial void Onsong_idChanging(global::System.Int32 value);
        partial void Onsong_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 playlistToSong_sequence
        {
            get
            {
                return _playlistToSong_sequence;
            }
            set
            {
                OnplaylistToSong_sequenceChanging(value);
                ReportPropertyChanging("playlistToSong_sequence");
                _playlistToSong_sequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("playlistToSong_sequence");
                OnplaylistToSong_sequenceChanged();
            }
        }
        private global::System.Int32 _playlistToSong_sequence;
        partial void OnplaylistToSong_sequenceChanging(global::System.Int32 value);
        partial void OnplaylistToSong_sequenceChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="singspazeModel", Name="publisher")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class publisher : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new publisher object.
        /// </summary>
        /// <param name="publisher_id">Initial value of the publisher_id property.</param>
        /// <param name="publisher_description">Initial value of the publisher_description property.</param>
        public static publisher Createpublisher(global::System.Int32 publisher_id, global::System.String publisher_description)
        {
            publisher publisher = new publisher();
            publisher.publisher_id = publisher_id;
            publisher.publisher_description = publisher_description;
            return publisher;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 publisher_id
        {
            get
            {
                return _publisher_id;
            }
            set
            {
                if (_publisher_id != value)
                {
                    Onpublisher_idChanging(value);
                    ReportPropertyChanging("publisher_id");
                    _publisher_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("publisher_id");
                    Onpublisher_idChanged();
                }
            }
        }
        private global::System.Int32 _publisher_id;
        partial void Onpublisher_idChanging(global::System.Int32 value);
        partial void Onpublisher_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String publisher_description
        {
            get
            {
                return _publisher_description;
            }
            set
            {
                Onpublisher_descriptionChanging(value);
                ReportPropertyChanging("publisher_description");
                _publisher_description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("publisher_description");
                Onpublisher_descriptionChanged();
            }
        }
        private global::System.String _publisher_description;
        partial void Onpublisher_descriptionChanging(global::System.String value);
        partial void Onpublisher_descriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="singspazeModel", Name="publisherforartist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class publisherforartist : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new publisherforartist object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="publisherId">Initial value of the publisherId property.</param>
        /// <param name="artistId">Initial value of the artistId property.</param>
        public static publisherforartist Createpublisherforartist(global::System.Int32 id, global::System.Int32 publisherId, global::System.Int32 artistId)
        {
            publisherforartist publisherforartist = new publisherforartist();
            publisherforartist.Id = id;
            publisherforartist.publisherId = publisherId;
            publisherforartist.artistId = artistId;
            return publisherforartist;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 publisherId
        {
            get
            {
                return _publisherId;
            }
            set
            {
                OnpublisherIdChanging(value);
                ReportPropertyChanging("publisherId");
                _publisherId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("publisherId");
                OnpublisherIdChanged();
            }
        }
        private global::System.Int32 _publisherId;
        partial void OnpublisherIdChanging(global::System.Int32 value);
        partial void OnpublisherIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 artistId
        {
            get
            {
                return _artistId;
            }
            set
            {
                OnartistIdChanging(value);
                ReportPropertyChanging("artistId");
                _artistId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("artistId");
                OnartistIdChanged();
            }
        }
        private global::System.Int32 _artistId;
        partial void OnartistIdChanging(global::System.Int32 value);
        partial void OnartistIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="singspazeModel", Name="publisherforsong")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class publisherforsong : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new publisherforsong object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="publisherId">Initial value of the publisherId property.</param>
        /// <param name="songId">Initial value of the songId property.</param>
        public static publisherforsong Createpublisherforsong(global::System.Int32 id, global::System.Int32 publisherId, global::System.Int32 songId)
        {
            publisherforsong publisherforsong = new publisherforsong();
            publisherforsong.id = id;
            publisherforsong.publisherId = publisherId;
            publisherforsong.songId = songId;
            return publisherforsong;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 publisherId
        {
            get
            {
                return _publisherId;
            }
            set
            {
                OnpublisherIdChanging(value);
                ReportPropertyChanging("publisherId");
                _publisherId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("publisherId");
                OnpublisherIdChanged();
            }
        }
        private global::System.Int32 _publisherId;
        partial void OnpublisherIdChanging(global::System.Int32 value);
        partial void OnpublisherIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 songId
        {
            get
            {
                return _songId;
            }
            set
            {
                OnsongIdChanging(value);
                ReportPropertyChanging("songId");
                _songId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("songId");
                OnsongIdChanged();
            }
        }
        private global::System.Int32 _songId;
        partial void OnsongIdChanging(global::System.Int32 value);
        partial void OnsongIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="singspazeModel", Name="singinghistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class singinghistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new singinghistory object.
        /// </summary>
        /// <param name="singinghistory_id">Initial value of the singinghistory_id property.</param>
        /// <param name="user_id">Initial value of the user_id property.</param>
        /// <param name="song_id">Initial value of the song_id property.</param>
        /// <param name="artist_id">Initial value of the artist_id property.</param>
        /// <param name="singinghistory_date">Initial value of the singinghistory_date property.</param>
        public static singinghistory Createsinginghistory(global::System.Int32 singinghistory_id, global::System.Int32 user_id, global::System.Int32 song_id, global::System.Int32 artist_id, global::System.DateTime singinghistory_date)
        {
            singinghistory singinghistory = new singinghistory();
            singinghistory.singinghistory_id = singinghistory_id;
            singinghistory.user_id = user_id;
            singinghistory.song_id = song_id;
            singinghistory.artist_id = artist_id;
            singinghistory.singinghistory_date = singinghistory_date;
            return singinghistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 singinghistory_id
        {
            get
            {
                return _singinghistory_id;
            }
            set
            {
                if (_singinghistory_id != value)
                {
                    Onsinginghistory_idChanging(value);
                    ReportPropertyChanging("singinghistory_id");
                    _singinghistory_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("singinghistory_id");
                    Onsinginghistory_idChanged();
                }
            }
        }
        private global::System.Int32 _singinghistory_id;
        partial void Onsinginghistory_idChanging(global::System.Int32 value);
        partial void Onsinginghistory_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private global::System.Int32 _user_id;
        partial void Onuser_idChanging(global::System.Int32 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 song_id
        {
            get
            {
                return _song_id;
            }
            set
            {
                Onsong_idChanging(value);
                ReportPropertyChanging("song_id");
                _song_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("song_id");
                Onsong_idChanged();
            }
        }
        private global::System.Int32 _song_id;
        partial void Onsong_idChanging(global::System.Int32 value);
        partial void Onsong_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 artist_id
        {
            get
            {
                return _artist_id;
            }
            set
            {
                Onartist_idChanging(value);
                ReportPropertyChanging("artist_id");
                _artist_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("artist_id");
                Onartist_idChanged();
            }
        }
        private global::System.Int32 _artist_id;
        partial void Onartist_idChanging(global::System.Int32 value);
        partial void Onartist_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime singinghistory_date
        {
            get
            {
                return _singinghistory_date;
            }
            set
            {
                Onsinginghistory_dateChanging(value);
                ReportPropertyChanging("singinghistory_date");
                _singinghistory_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("singinghistory_date");
                Onsinginghistory_dateChanged();
            }
        }
        private global::System.DateTime _singinghistory_date;
        partial void Onsinginghistory_dateChanging(global::System.DateTime value);
        partial void Onsinginghistory_dateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="singspazeModel", Name="song")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class song : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new song object.
        /// </summary>
        /// <param name="song_id">Initial value of the song_id property.</param>
        /// <param name="song_genre">Initial value of the song_genre property.</param>
        /// <param name="song_languageId">Initial value of the song_languageId property.</param>
        /// <param name="song_albumId">Initial value of the song_albumId property.</param>
        /// <param name="song_artistId">Initial value of the song_artistId property.</param>
        /// <param name="song_length">Initial value of the song_length property.</param>
        /// <param name="song_publisherId">Initial value of the song_publisherId property.</param>
        /// <param name="song_releasedDate">Initial value of the song_releasedDate property.</param>
        /// <param name="song_status">Initial value of the song_status property.</param>
        /// <param name="song_addedDate">Initial value of the song_addedDate property.</param>
        /// <param name="song_view">Initial value of the song_view property.</param>
        /// <param name="song_Track_Number">Initial value of the song_Track_Number property.</param>
        public static song Createsong(global::System.Int32 song_id, global::System.Int32 song_genre, global::System.Int32 song_languageId, global::System.Int32 song_albumId, global::System.Int32 song_artistId, global::System.String song_length, global::System.Int32 song_publisherId, global::System.DateTime song_releasedDate, global::System.Int32 song_status, global::System.DateTime song_addedDate, global::System.Int32 song_view, global::System.Int32 song_Track_Number)
        {
            song song = new song();
            song.song_id = song_id;
            song.song_genre = song_genre;
            song.song_languageId = song_languageId;
            song.song_albumId = song_albumId;
            song.song_artistId = song_artistId;
            song.song_length = song_length;
            song.song_publisherId = song_publisherId;
            song.song_releasedDate = song_releasedDate;
            song.song_status = song_status;
            song.song_addedDate = song_addedDate;
            song.song_view = song_view;
            song.song_Track_Number = song_Track_Number;
            return song;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 song_id
        {
            get
            {
                return _song_id;
            }
            set
            {
                if (_song_id != value)
                {
                    Onsong_idChanging(value);
                    ReportPropertyChanging("song_id");
                    _song_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("song_id");
                    Onsong_idChanged();
                }
            }
        }
        private global::System.Int32 _song_id;
        partial void Onsong_idChanging(global::System.Int32 value);
        partial void Onsong_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String song_originName
        {
            get
            {
                return _song_originName;
            }
            set
            {
                Onsong_originNameChanging(value);
                ReportPropertyChanging("song_originName");
                _song_originName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("song_originName");
                Onsong_originNameChanged();
            }
        }
        private global::System.String _song_originName;
        partial void Onsong_originNameChanging(global::System.String value);
        partial void Onsong_originNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String song_engName
        {
            get
            {
                return _song_engName;
            }
            set
            {
                Onsong_engNameChanging(value);
                ReportPropertyChanging("song_engName");
                _song_engName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("song_engName");
                Onsong_engNameChanged();
            }
        }
        private global::System.String _song_engName;
        partial void Onsong_engNameChanging(global::System.String value);
        partial void Onsong_engNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 song_genre
        {
            get
            {
                return _song_genre;
            }
            set
            {
                Onsong_genreChanging(value);
                ReportPropertyChanging("song_genre");
                _song_genre = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("song_genre");
                Onsong_genreChanged();
            }
        }
        private global::System.Int32 _song_genre;
        partial void Onsong_genreChanging(global::System.Int32 value);
        partial void Onsong_genreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 song_languageId
        {
            get
            {
                return _song_languageId;
            }
            set
            {
                Onsong_languageIdChanging(value);
                ReportPropertyChanging("song_languageId");
                _song_languageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("song_languageId");
                Onsong_languageIdChanged();
            }
        }
        private global::System.Int32 _song_languageId;
        partial void Onsong_languageIdChanging(global::System.Int32 value);
        partial void Onsong_languageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 song_albumId
        {
            get
            {
                return _song_albumId;
            }
            set
            {
                Onsong_albumIdChanging(value);
                ReportPropertyChanging("song_albumId");
                _song_albumId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("song_albumId");
                Onsong_albumIdChanged();
            }
        }
        private global::System.Int32 _song_albumId;
        partial void Onsong_albumIdChanging(global::System.Int32 value);
        partial void Onsong_albumIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 song_artistId
        {
            get
            {
                return _song_artistId;
            }
            set
            {
                Onsong_artistIdChanging(value);
                ReportPropertyChanging("song_artistId");
                _song_artistId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("song_artistId");
                Onsong_artistIdChanged();
            }
        }
        private global::System.Int32 _song_artistId;
        partial void Onsong_artistIdChanging(global::System.Int32 value);
        partial void Onsong_artistIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String song_length
        {
            get
            {
                return _song_length;
            }
            set
            {
                Onsong_lengthChanging(value);
                ReportPropertyChanging("song_length");
                _song_length = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("song_length");
                Onsong_lengthChanged();
            }
        }
        private global::System.String _song_length;
        partial void Onsong_lengthChanging(global::System.String value);
        partial void Onsong_lengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String song_keywords
        {
            get
            {
                return _song_keywords;
            }
            set
            {
                Onsong_keywordsChanging(value);
                ReportPropertyChanging("song_keywords");
                _song_keywords = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("song_keywords");
                Onsong_keywordsChanged();
            }
        }
        private global::System.String _song_keywords;
        partial void Onsong_keywordsChanging(global::System.String value);
        partial void Onsong_keywordsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String song_lyrics
        {
            get
            {
                return _song_lyrics;
            }
            set
            {
                Onsong_lyricsChanging(value);
                ReportPropertyChanging("song_lyrics");
                _song_lyrics = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("song_lyrics");
                Onsong_lyricsChanged();
            }
        }
        private global::System.String _song_lyrics;
        partial void Onsong_lyricsChanging(global::System.String value);
        partial void Onsong_lyricsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 song_publisherId
        {
            get
            {
                return _song_publisherId;
            }
            set
            {
                Onsong_publisherIdChanging(value);
                ReportPropertyChanging("song_publisherId");
                _song_publisherId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("song_publisherId");
                Onsong_publisherIdChanged();
            }
        }
        private global::System.Int32 _song_publisherId;
        partial void Onsong_publisherIdChanging(global::System.Int32 value);
        partial void Onsong_publisherIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime song_releasedDate
        {
            get
            {
                return _song_releasedDate;
            }
            set
            {
                Onsong_releasedDateChanging(value);
                ReportPropertyChanging("song_releasedDate");
                _song_releasedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("song_releasedDate");
                Onsong_releasedDateChanged();
            }
        }
        private global::System.DateTime _song_releasedDate;
        partial void Onsong_releasedDateChanging(global::System.DateTime value);
        partial void Onsong_releasedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String song_URL_picture
        {
            get
            {
                return _song_URL_picture;
            }
            set
            {
                Onsong_URL_pictureChanging(value);
                ReportPropertyChanging("song_URL_picture");
                _song_URL_picture = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("song_URL_picture");
                Onsong_URL_pictureChanged();
            }
        }
        private global::System.String _song_URL_picture;
        partial void Onsong_URL_pictureChanging(global::System.String value);
        partial void Onsong_URL_pictureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 song_status
        {
            get
            {
                return _song_status;
            }
            set
            {
                Onsong_statusChanging(value);
                ReportPropertyChanging("song_status");
                _song_status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("song_status");
                Onsong_statusChanged();
            }
        }
        private global::System.Int32 _song_status;
        partial void Onsong_statusChanging(global::System.Int32 value);
        partial void Onsong_statusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime song_addedDate
        {
            get
            {
                return _song_addedDate;
            }
            set
            {
                Onsong_addedDateChanging(value);
                ReportPropertyChanging("song_addedDate");
                _song_addedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("song_addedDate");
                Onsong_addedDateChanged();
            }
        }
        private global::System.DateTime _song_addedDate;
        partial void Onsong_addedDateChanging(global::System.DateTime value);
        partial void Onsong_addedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> song_price
        {
            get
            {
                return _song_price;
            }
            set
            {
                Onsong_priceChanging(value);
                ReportPropertyChanging("song_price");
                _song_price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("song_price");
                Onsong_priceChanged();
            }
        }
        private Nullable<global::System.Decimal> _song_price;
        partial void Onsong_priceChanging(Nullable<global::System.Decimal> value);
        partial void Onsong_priceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 song_view
        {
            get
            {
                return _song_view;
            }
            set
            {
                Onsong_viewChanging(value);
                ReportPropertyChanging("song_view");
                _song_view = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("song_view");
                Onsong_viewChanged();
            }
        }
        private global::System.Int32 _song_view;
        partial void Onsong_viewChanging(global::System.Int32 value);
        partial void Onsong_viewChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String song_URL_iOS
        {
            get
            {
                return _song_URL_iOS;
            }
            set
            {
                Onsong_URL_iOSChanging(value);
                ReportPropertyChanging("song_URL_iOS");
                _song_URL_iOS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("song_URL_iOS");
                Onsong_URL_iOSChanged();
            }
        }
        private global::System.String _song_URL_iOS;
        partial void Onsong_URL_iOSChanging(global::System.String value);
        partial void Onsong_URL_iOSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String song_URL_Android_Other
        {
            get
            {
                return _song_URL_Android_Other;
            }
            set
            {
                Onsong_URL_Android_OtherChanging(value);
                ReportPropertyChanging("song_URL_Android_Other");
                _song_URL_Android_Other = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("song_URL_Android_Other");
                Onsong_URL_Android_OtherChanged();
            }
        }
        private global::System.String _song_URL_Android_Other;
        partial void Onsong_URL_Android_OtherChanging(global::System.String value);
        partial void Onsong_URL_Android_OtherChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String song_URL_RTMP
        {
            get
            {
                return _song_URL_RTMP;
            }
            set
            {
                Onsong_URL_RTMPChanging(value);
                ReportPropertyChanging("song_URL_RTMP");
                _song_URL_RTMP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("song_URL_RTMP");
                Onsong_URL_RTMPChanged();
            }
        }
        private global::System.String _song_URL_RTMP;
        partial void Onsong_URL_RTMPChanging(global::System.String value);
        partial void Onsong_URL_RTMPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String song_Copyright
        {
            get
            {
                return _song_Copyright;
            }
            set
            {
                Onsong_CopyrightChanging(value);
                ReportPropertyChanging("song_Copyright");
                _song_Copyright = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("song_Copyright");
                Onsong_CopyrightChanged();
            }
        }
        private global::System.String _song_Copyright;
        partial void Onsong_CopyrightChanging(global::System.String value);
        partial void Onsong_CopyrightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 song_Track_Number
        {
            get
            {
                return _song_Track_Number;
            }
            set
            {
                Onsong_Track_NumberChanging(value);
                ReportPropertyChanging("song_Track_Number");
                _song_Track_Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("song_Track_Number");
                Onsong_Track_NumberChanged();
            }
        }
        private global::System.Int32 _song_Track_Number;
        partial void Onsong_Track_NumberChanging(global::System.Int32 value);
        partial void Onsong_Track_NumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String song_streamURLWithVocal
        {
            get
            {
                return _song_streamURLWithVocal;
            }
            set
            {
                Onsong_streamURLWithVocalChanging(value);
                ReportPropertyChanging("song_streamURLWithVocal");
                _song_streamURLWithVocal = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("song_streamURLWithVocal");
                Onsong_streamURLWithVocalChanged();
            }
        }
        private global::System.String _song_streamURLWithVocal;
        partial void Onsong_streamURLWithVocalChanging(global::System.String value);
        partial void Onsong_streamURLWithVocalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String song_streamURLWithoutVocal
        {
            get
            {
                return _song_streamURLWithoutVocal;
            }
            set
            {
                Onsong_streamURLWithoutVocalChanging(value);
                ReportPropertyChanging("song_streamURLWithoutVocal");
                _song_streamURLWithoutVocal = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("song_streamURLWithoutVocal");
                Onsong_streamURLWithoutVocalChanged();
            }
        }
        private global::System.String _song_streamURLWithoutVocal;
        partial void Onsong_streamURLWithoutVocalChanging(global::System.String value);
        partial void Onsong_streamURLWithoutVocalChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="singspazeModel", Name="status")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class status : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new status object.
        /// </summary>
        /// <param name="status_id">Initial value of the status_id property.</param>
        /// <param name="status_description">Initial value of the status_description property.</param>
        public static status Createstatus(global::System.Int32 status_id, global::System.String status_description)
        {
            status status = new status();
            status.status_id = status_id;
            status.status_description = status_description;
            return status;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 status_id
        {
            get
            {
                return _status_id;
            }
            set
            {
                if (_status_id != value)
                {
                    Onstatus_idChanging(value);
                    ReportPropertyChanging("status_id");
                    _status_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("status_id");
                    Onstatus_idChanged();
                }
            }
        }
        private global::System.Int32 _status_id;
        partial void Onstatus_idChanging(global::System.Int32 value);
        partial void Onstatus_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String status_description
        {
            get
            {
                return _status_description;
            }
            set
            {
                Onstatus_descriptionChanging(value);
                ReportPropertyChanging("status_description");
                _status_description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("status_description");
                Onstatus_descriptionChanged();
            }
        }
        private global::System.String _status_description;
        partial void Onstatus_descriptionChanging(global::System.String value);
        partial void Onstatus_descriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="singspazeModel", Name="user")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class user : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new user object.
        /// </summary>
        /// <param name="user_id">Initial value of the user_id property.</param>
        /// <param name="user_status">Initial value of the user_status property.</param>
        /// <param name="usergroup_id">Initial value of the usergroup_id property.</param>
        /// <param name="user_type">Initial value of the user_type property.</param>
        /// <param name="user_fbUserId">Initial value of the user_fbUserId property.</param>
        public static user Createuser(global::System.Int32 user_id, global::System.SByte user_status, global::System.Int32 usergroup_id, global::System.Int32 user_type, global::System.Int32 user_fbUserId)
        {
            user user = new user();
            user.user_id = user_id;
            user.user_status = user_status;
            user.usergroup_id = usergroup_id;
            user.user_type = user_type;
            user.user_fbUserId = user_fbUserId;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                if (_user_id != value)
                {
                    Onuser_idChanging(value);
                    ReportPropertyChanging("user_id");
                    _user_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("user_id");
                    Onuser_idChanged();
                }
            }
        }
        private global::System.Int32 _user_id;
        partial void Onuser_idChanging(global::System.Int32 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.SByte user_status
        {
            get
            {
                return _user_status;
            }
            set
            {
                Onuser_statusChanging(value);
                ReportPropertyChanging("user_status");
                _user_status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_status");
                Onuser_statusChanged();
            }
        }
        private global::System.SByte _user_status;
        partial void Onuser_statusChanging(global::System.SByte value);
        partial void Onuser_statusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 usergroup_id
        {
            get
            {
                return _usergroup_id;
            }
            set
            {
                Onusergroup_idChanging(value);
                ReportPropertyChanging("usergroup_id");
                _usergroup_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("usergroup_id");
                Onusergroup_idChanged();
            }
        }
        private global::System.Int32 _usergroup_id;
        partial void Onusergroup_idChanging(global::System.Int32 value);
        partial void Onusergroup_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_type
        {
            get
            {
                return _user_type;
            }
            set
            {
                Onuser_typeChanging(value);
                ReportPropertyChanging("user_type");
                _user_type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_type");
                Onuser_typeChanged();
            }
        }
        private global::System.Int32 _user_type;
        partial void Onuser_typeChanging(global::System.Int32 value);
        partial void Onuser_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_fbUserId
        {
            get
            {
                return _user_fbUserId;
            }
            set
            {
                Onuser_fbUserIdChanging(value);
                ReportPropertyChanging("user_fbUserId");
                _user_fbUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_fbUserId");
                Onuser_fbUserIdChanged();
            }
        }
        private global::System.Int32 _user_fbUserId;
        partial void Onuser_fbUserIdChanging(global::System.Int32 value);
        partial void Onuser_fbUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String user_firstname
        {
            get
            {
                return _user_firstname;
            }
            set
            {
                Onuser_firstnameChanging(value);
                ReportPropertyChanging("user_firstname");
                _user_firstname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("user_firstname");
                Onuser_firstnameChanged();
            }
        }
        private global::System.String _user_firstname;
        partial void Onuser_firstnameChanging(global::System.String value);
        partial void Onuser_firstnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String user_lastname
        {
            get
            {
                return _user_lastname;
            }
            set
            {
                Onuser_lastnameChanging(value);
                ReportPropertyChanging("user_lastname");
                _user_lastname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("user_lastname");
                Onuser_lastnameChanged();
            }
        }
        private global::System.String _user_lastname;
        partial void Onuser_lastnameChanging(global::System.String value);
        partial void Onuser_lastnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String user_login
        {
            get
            {
                return _user_login;
            }
            set
            {
                Onuser_loginChanging(value);
                ReportPropertyChanging("user_login");
                _user_login = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("user_login");
                Onuser_loginChanged();
            }
        }
        private global::System.String _user_login;
        partial void Onuser_loginChanging(global::System.String value);
        partial void Onuser_loginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String user_password
        {
            get
            {
                return _user_password;
            }
            set
            {
                Onuser_passwordChanging(value);
                ReportPropertyChanging("user_password");
                _user_password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("user_password");
                Onuser_passwordChanged();
            }
        }
        private global::System.String _user_password;
        partial void Onuser_passwordChanging(global::System.String value);
        partial void Onuser_passwordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String user_email
        {
            get
            {
                return _user_email;
            }
            set
            {
                Onuser_emailChanging(value);
                ReportPropertyChanging("user_email");
                _user_email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("user_email");
                Onuser_emailChanged();
            }
        }
        private global::System.String _user_email;
        partial void Onuser_emailChanging(global::System.String value);
        partial void Onuser_emailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> user_createdDatetime
        {
            get
            {
                return _user_createdDatetime;
            }
            set
            {
                Onuser_createdDatetimeChanging(value);
                ReportPropertyChanging("user_createdDatetime");
                _user_createdDatetime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_createdDatetime");
                Onuser_createdDatetimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _user_createdDatetime;
        partial void Onuser_createdDatetimeChanging(Nullable<global::System.DateTime> value);
        partial void Onuser_createdDatetimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> user_modifiedDatetime
        {
            get
            {
                return _user_modifiedDatetime;
            }
            set
            {
                Onuser_modifiedDatetimeChanging(value);
                ReportPropertyChanging("user_modifiedDatetime");
                _user_modifiedDatetime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_modifiedDatetime");
                Onuser_modifiedDatetimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _user_modifiedDatetime;
        partial void Onuser_modifiedDatetimeChanging(Nullable<global::System.DateTime> value);
        partial void Onuser_modifiedDatetimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> user_lastlogin
        {
            get
            {
                return _user_lastlogin;
            }
            set
            {
                Onuser_lastloginChanging(value);
                ReportPropertyChanging("user_lastlogin");
                _user_lastlogin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_lastlogin");
                Onuser_lastloginChanged();
            }
        }
        private Nullable<global::System.DateTime> _user_lastlogin;
        partial void Onuser_lastloginChanging(Nullable<global::System.DateTime> value);
        partial void Onuser_lastloginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String user_avartar
        {
            get
            {
                return _user_avartar;
            }
            set
            {
                Onuser_avartarChanging(value);
                ReportPropertyChanging("user_avartar");
                _user_avartar = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("user_avartar");
                Onuser_avartarChanged();
            }
        }
        private global::System.String _user_avartar;
        partial void Onuser_avartarChanging(global::System.String value);
        partial void Onuser_avartarChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String user_token
        {
            get
            {
                return _user_token;
            }
            set
            {
                Onuser_tokenChanging(value);
                ReportPropertyChanging("user_token");
                _user_token = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("user_token");
                Onuser_tokenChanged();
            }
        }
        private global::System.String _user_token;
        partial void Onuser_tokenChanging(global::System.String value);
        partial void Onuser_tokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String user_retoken
        {
            get
            {
                return _user_retoken;
            }
            set
            {
                Onuser_retokenChanging(value);
                ReportPropertyChanging("user_retoken");
                _user_retoken = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("user_retoken");
                Onuser_retokenChanged();
            }
        }
        private global::System.String _user_retoken;
        partial void Onuser_retokenChanging(global::System.String value);
        partial void Onuser_retokenChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="singspazeModel", Name="viewhistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class viewhistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new viewhistory object.
        /// </summary>
        /// <param name="viewHistory_Id">Initial value of the ViewHistory_Id property.</param>
        /// <param name="user_Id">Initial value of the User_Id property.</param>
        /// <param name="song_Id">Initial value of the Song_Id property.</param>
        /// <param name="viewHistory_Date">Initial value of the ViewHistory_Date property.</param>
        public static viewhistory Createviewhistory(global::System.Int32 viewHistory_Id, global::System.Int32 user_Id, global::System.Int32 song_Id, global::System.DateTime viewHistory_Date)
        {
            viewhistory viewhistory = new viewhistory();
            viewhistory.ViewHistory_Id = viewHistory_Id;
            viewhistory.User_Id = user_Id;
            viewhistory.Song_Id = song_Id;
            viewhistory.ViewHistory_Date = viewHistory_Date;
            return viewhistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ViewHistory_Id
        {
            get
            {
                return _ViewHistory_Id;
            }
            set
            {
                if (_ViewHistory_Id != value)
                {
                    OnViewHistory_IdChanging(value);
                    ReportPropertyChanging("ViewHistory_Id");
                    _ViewHistory_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ViewHistory_Id");
                    OnViewHistory_IdChanged();
                }
            }
        }
        private global::System.Int32 _ViewHistory_Id;
        partial void OnViewHistory_IdChanging(global::System.Int32 value);
        partial void OnViewHistory_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 User_Id
        {
            get
            {
                return _User_Id;
            }
            set
            {
                OnUser_IdChanging(value);
                ReportPropertyChanging("User_Id");
                _User_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("User_Id");
                OnUser_IdChanged();
            }
        }
        private global::System.Int32 _User_Id;
        partial void OnUser_IdChanging(global::System.Int32 value);
        partial void OnUser_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Song_Id
        {
            get
            {
                return _Song_Id;
            }
            set
            {
                OnSong_IdChanging(value);
                ReportPropertyChanging("Song_Id");
                _Song_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Song_Id");
                OnSong_IdChanged();
            }
        }
        private global::System.Int32 _Song_Id;
        partial void OnSong_IdChanging(global::System.Int32 value);
        partial void OnSong_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ViewHistory_Date
        {
            get
            {
                return _ViewHistory_Date;
            }
            set
            {
                OnViewHistory_DateChanging(value);
                ReportPropertyChanging("ViewHistory_Date");
                _ViewHistory_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ViewHistory_Date");
                OnViewHistory_DateChanged();
            }
        }
        private global::System.DateTime _ViewHistory_Date;
        partial void OnViewHistory_DateChanging(global::System.DateTime value);
        partial void OnViewHistory_DateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="singspazeModel", Name="wtbtokens")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class wtbtokens : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new wtbtokens object.
        /// </summary>
        /// <param name="wTBTokens_id">Initial value of the WTBTokens_id property.</param>
        /// <param name="user_id">Initial value of the user_id property.</param>
        /// <param name="wTBTokens_timestamp">Initial value of the WTBTokens_timestamp property.</param>
        /// <param name="wTBTokens_ipaddress">Initial value of the WTBTokens_ipaddress property.</param>
        /// <param name="wTBTokens_token">Initial value of the WTBTokens_token property.</param>
        public static wtbtokens Createwtbtokens(global::System.Int64 wTBTokens_id, global::System.Int64 user_id, global::System.DateTime wTBTokens_timestamp, global::System.String wTBTokens_ipaddress, global::System.String wTBTokens_token)
        {
            wtbtokens wtbtokens = new wtbtokens();
            wtbtokens.WTBTokens_id = wTBTokens_id;
            wtbtokens.user_id = user_id;
            wtbtokens.WTBTokens_timestamp = wTBTokens_timestamp;
            wtbtokens.WTBTokens_ipaddress = wTBTokens_ipaddress;
            wtbtokens.WTBTokens_token = wTBTokens_token;
            return wtbtokens;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 WTBTokens_id
        {
            get
            {
                return _WTBTokens_id;
            }
            set
            {
                if (_WTBTokens_id != value)
                {
                    OnWTBTokens_idChanging(value);
                    ReportPropertyChanging("WTBTokens_id");
                    _WTBTokens_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WTBTokens_id");
                    OnWTBTokens_idChanged();
                }
            }
        }
        private global::System.Int64 _WTBTokens_id;
        partial void OnWTBTokens_idChanging(global::System.Int64 value);
        partial void OnWTBTokens_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private global::System.Int64 _user_id;
        partial void Onuser_idChanging(global::System.Int64 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime WTBTokens_timestamp
        {
            get
            {
                return _WTBTokens_timestamp;
            }
            set
            {
                OnWTBTokens_timestampChanging(value);
                ReportPropertyChanging("WTBTokens_timestamp");
                _WTBTokens_timestamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WTBTokens_timestamp");
                OnWTBTokens_timestampChanged();
            }
        }
        private global::System.DateTime _WTBTokens_timestamp;
        partial void OnWTBTokens_timestampChanging(global::System.DateTime value);
        partial void OnWTBTokens_timestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WTBTokens_ipaddress
        {
            get
            {
                return _WTBTokens_ipaddress;
            }
            set
            {
                OnWTBTokens_ipaddressChanging(value);
                ReportPropertyChanging("WTBTokens_ipaddress");
                _WTBTokens_ipaddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WTBTokens_ipaddress");
                OnWTBTokens_ipaddressChanged();
            }
        }
        private global::System.String _WTBTokens_ipaddress;
        partial void OnWTBTokens_ipaddressChanging(global::System.String value);
        partial void OnWTBTokens_ipaddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WTBTokens_token
        {
            get
            {
                return _WTBTokens_token;
            }
            set
            {
                OnWTBTokens_tokenChanging(value);
                ReportPropertyChanging("WTBTokens_token");
                _WTBTokens_token = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WTBTokens_token");
                OnWTBTokens_tokenChanged();
            }
        }
        private global::System.String _WTBTokens_token;
        partial void OnWTBTokens_tokenChanging(global::System.String value);
        partial void OnWTBTokens_tokenChanged();

        #endregion

    
    }

    #endregion

    
}
