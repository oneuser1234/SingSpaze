//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace SingSpaze.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class singspazeEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new singspazeEntities object using the connection string found in the 'singspazeEntities' section of the application configuration file.
        /// </summary>
        public singspazeEntities() : base("name=singspazeEntities", "singspazeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new singspazeEntities object.
        /// </summary>
        public singspazeEntities(string connectionString) : base(connectionString, "singspazeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new singspazeEntities object.
        /// </summary>
        public singspazeEntities(EntityConnection connection) : base(connection, "singspazeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<album> album
        {
            get
            {
                if ((_album == null))
                {
                    _album = base.CreateObjectSet<album>("album");
                }
                return _album;
            }
        }
        private ObjectSet<album> _album;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<artist> artist
        {
            get
            {
                if ((_artist == null))
                {
                    _artist = base.CreateObjectSet<artist>("artist");
                }
                return _artist;
            }
        }
        private ObjectSet<artist> _artist;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<contentpartner> contentpartner
        {
            get
            {
                if ((_contentpartner == null))
                {
                    _contentpartner = base.CreateObjectSet<contentpartner>("contentpartner");
                }
                return _contentpartner;
            }
        }
        private ObjectSet<contentpartner> _contentpartner;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<genre> genre
        {
            get
            {
                if ((_genre == null))
                {
                    _genre = base.CreateObjectSet<genre>("genre");
                }
                return _genre;
            }
        }
        private ObjectSet<genre> _genre;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<language> language
        {
            get
            {
                if ((_language == null))
                {
                    _language = base.CreateObjectSet<language>("language");
                }
                return _language;
            }
        }
        private ObjectSet<language> _language;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<playlist> playlist
        {
            get
            {
                if ((_playlist == null))
                {
                    _playlist = base.CreateObjectSet<playlist>("playlist");
                }
                return _playlist;
            }
        }
        private ObjectSet<playlist> _playlist;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<playlisttosong> playlisttosong
        {
            get
            {
                if ((_playlisttosong == null))
                {
                    _playlisttosong = base.CreateObjectSet<playlisttosong>("playlisttosong");
                }
                return _playlisttosong;
            }
        }
        private ObjectSet<playlisttosong> _playlisttosong;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<recordlabel> recordlabel
        {
            get
            {
                if ((_recordlabel == null))
                {
                    _recordlabel = base.CreateObjectSet<recordlabel>("recordlabel");
                }
                return _recordlabel;
            }
        }
        private ObjectSet<recordlabel> _recordlabel;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<singinghistory> singinghistory
        {
            get
            {
                if ((_singinghistory == null))
                {
                    _singinghistory = base.CreateObjectSet<singinghistory>("singinghistory");
                }
                return _singinghistory;
            }
        }
        private ObjectSet<singinghistory> _singinghistory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<song> song
        {
            get
            {
                if ((_song == null))
                {
                    _song = base.CreateObjectSet<song>("song");
                }
                return _song;
            }
        }
        private ObjectSet<song> _song;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<status> status
        {
            get
            {
                if ((_status == null))
                {
                    _status = base.CreateObjectSet<status>("status");
                }
                return _status;
            }
        }
        private ObjectSet<status> _status;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<user> user
        {
            get
            {
                if ((_user == null))
                {
                    _user = base.CreateObjectSet<user>("user");
                }
                return _user;
            }
        }
        private ObjectSet<user> _user;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the album EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToalbum(album album)
        {
            base.AddObject("album", album);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the artist EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToartist(artist artist)
        {
            base.AddObject("artist", artist);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the contentpartner EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocontentpartner(contentpartner contentpartner)
        {
            base.AddObject("contentpartner", contentpartner);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the genre EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTogenre(genre genre)
        {
            base.AddObject("genre", genre);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the language EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTolanguage(language language)
        {
            base.AddObject("language", language);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the playlist EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToplaylist(playlist playlist)
        {
            base.AddObject("playlist", playlist);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the playlisttosong EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToplaylisttosong(playlisttosong playlisttosong)
        {
            base.AddObject("playlisttosong", playlisttosong);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the recordlabel EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorecordlabel(recordlabel recordlabel)
        {
            base.AddObject("recordlabel", recordlabel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the singinghistory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosinginghistory(singinghistory singinghistory)
        {
            base.AddObject("singinghistory", singinghistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the song EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosong(song song)
        {
            base.AddObject("song", song);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the status EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTostatus(status status)
        {
            base.AddObject("status", status);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the user EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTouser(user user)
        {
            base.AddObject("user", user);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="singspazeModel", Name="album")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class album : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new album object.
        /// </summary>
        /// <param name="album_id">Initial value of the album_id property.</param>
        /// <param name="album_description_th">Initial value of the album_description_th property.</param>
        /// <param name="album_description_en">Initial value of the album_description_en property.</param>
        public static album Createalbum(global::System.Int32 album_id, global::System.String album_description_th, global::System.String album_description_en)
        {
            album album = new album();
            album.album_id = album_id;
            album.album_description_th = album_description_th;
            album.album_description_en = album_description_en;
            return album;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 album_id
        {
            get
            {
                return _album_id;
            }
            set
            {
                if (_album_id != value)
                {
                    Onalbum_idChanging(value);
                    ReportPropertyChanging("album_id");
                    _album_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("album_id");
                    Onalbum_idChanged();
                }
            }
        }
        private global::System.Int32 _album_id;
        partial void Onalbum_idChanging(global::System.Int32 value);
        partial void Onalbum_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String album_description_th
        {
            get
            {
                return _album_description_th;
            }
            set
            {
                Onalbum_description_thChanging(value);
                ReportPropertyChanging("album_description_th");
                _album_description_th = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("album_description_th");
                Onalbum_description_thChanged();
            }
        }
        private global::System.String _album_description_th;
        partial void Onalbum_description_thChanging(global::System.String value);
        partial void Onalbum_description_thChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String album_description_en
        {
            get
            {
                return _album_description_en;
            }
            set
            {
                Onalbum_description_enChanging(value);
                ReportPropertyChanging("album_description_en");
                _album_description_en = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("album_description_en");
                Onalbum_description_enChanged();
            }
        }
        private global::System.String _album_description_en;
        partial void Onalbum_description_enChanging(global::System.String value);
        partial void Onalbum_description_enChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="singspazeModel", Name="artist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class artist : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new artist object.
        /// </summary>
        /// <param name="artist_id">Initial value of the artist_id property.</param>
        /// <param name="artist_description_th">Initial value of the artist_description_th property.</param>
        /// <param name="artist_description_en">Initial value of the artist_description_en property.</param>
        public static artist Createartist(global::System.Int32 artist_id, global::System.String artist_description_th, global::System.String artist_description_en)
        {
            artist artist = new artist();
            artist.artist_id = artist_id;
            artist.artist_description_th = artist_description_th;
            artist.artist_description_en = artist_description_en;
            return artist;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 artist_id
        {
            get
            {
                return _artist_id;
            }
            set
            {
                if (_artist_id != value)
                {
                    Onartist_idChanging(value);
                    ReportPropertyChanging("artist_id");
                    _artist_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("artist_id");
                    Onartist_idChanged();
                }
            }
        }
        private global::System.Int32 _artist_id;
        partial void Onartist_idChanging(global::System.Int32 value);
        partial void Onartist_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String artist_description_th
        {
            get
            {
                return _artist_description_th;
            }
            set
            {
                Onartist_description_thChanging(value);
                ReportPropertyChanging("artist_description_th");
                _artist_description_th = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("artist_description_th");
                Onartist_description_thChanged();
            }
        }
        private global::System.String _artist_description_th;
        partial void Onartist_description_thChanging(global::System.String value);
        partial void Onartist_description_thChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String artist_description_en
        {
            get
            {
                return _artist_description_en;
            }
            set
            {
                Onartist_description_enChanging(value);
                ReportPropertyChanging("artist_description_en");
                _artist_description_en = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("artist_description_en");
                Onartist_description_enChanged();
            }
        }
        private global::System.String _artist_description_en;
        partial void Onartist_description_enChanging(global::System.String value);
        partial void Onartist_description_enChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="singspazeModel", Name="contentpartner")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class contentpartner : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new contentpartner object.
        /// </summary>
        /// <param name="contentpartner_id">Initial value of the contentpartner_id property.</param>
        /// <param name="contentpartner_description">Initial value of the contentpartner_description property.</param>
        public static contentpartner Createcontentpartner(global::System.Int32 contentpartner_id, global::System.String contentpartner_description)
        {
            contentpartner contentpartner = new contentpartner();
            contentpartner.contentpartner_id = contentpartner_id;
            contentpartner.contentpartner_description = contentpartner_description;
            return contentpartner;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 contentpartner_id
        {
            get
            {
                return _contentpartner_id;
            }
            set
            {
                if (_contentpartner_id != value)
                {
                    Oncontentpartner_idChanging(value);
                    ReportPropertyChanging("contentpartner_id");
                    _contentpartner_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("contentpartner_id");
                    Oncontentpartner_idChanged();
                }
            }
        }
        private global::System.Int32 _contentpartner_id;
        partial void Oncontentpartner_idChanging(global::System.Int32 value);
        partial void Oncontentpartner_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String contentpartner_description
        {
            get
            {
                return _contentpartner_description;
            }
            set
            {
                Oncontentpartner_descriptionChanging(value);
                ReportPropertyChanging("contentpartner_description");
                _contentpartner_description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("contentpartner_description");
                Oncontentpartner_descriptionChanged();
            }
        }
        private global::System.String _contentpartner_description;
        partial void Oncontentpartner_descriptionChanging(global::System.String value);
        partial void Oncontentpartner_descriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="singspazeModel", Name="genre")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class genre : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new genre object.
        /// </summary>
        /// <param name="genre_id">Initial value of the genre_id property.</param>
        /// <param name="genre_description">Initial value of the genre_description property.</param>
        public static genre Creategenre(global::System.Int32 genre_id, global::System.String genre_description)
        {
            genre genre = new genre();
            genre.genre_id = genre_id;
            genre.genre_description = genre_description;
            return genre;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 genre_id
        {
            get
            {
                return _genre_id;
            }
            set
            {
                if (_genre_id != value)
                {
                    Ongenre_idChanging(value);
                    ReportPropertyChanging("genre_id");
                    _genre_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("genre_id");
                    Ongenre_idChanged();
                }
            }
        }
        private global::System.Int32 _genre_id;
        partial void Ongenre_idChanging(global::System.Int32 value);
        partial void Ongenre_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String genre_description
        {
            get
            {
                return _genre_description;
            }
            set
            {
                Ongenre_descriptionChanging(value);
                ReportPropertyChanging("genre_description");
                _genre_description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("genre_description");
                Ongenre_descriptionChanged();
            }
        }
        private global::System.String _genre_description;
        partial void Ongenre_descriptionChanging(global::System.String value);
        partial void Ongenre_descriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="singspazeModel", Name="language")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class language : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new language object.
        /// </summary>
        /// <param name="language_id">Initial value of the language_id property.</param>
        /// <param name="language_description">Initial value of the language_description property.</param>
        public static language Createlanguage(global::System.Int32 language_id, global::System.String language_description)
        {
            language language = new language();
            language.language_id = language_id;
            language.language_description = language_description;
            return language;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 language_id
        {
            get
            {
                return _language_id;
            }
            set
            {
                if (_language_id != value)
                {
                    Onlanguage_idChanging(value);
                    ReportPropertyChanging("language_id");
                    _language_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("language_id");
                    Onlanguage_idChanged();
                }
            }
        }
        private global::System.Int32 _language_id;
        partial void Onlanguage_idChanging(global::System.Int32 value);
        partial void Onlanguage_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String language_description
        {
            get
            {
                return _language_description;
            }
            set
            {
                Onlanguage_descriptionChanging(value);
                ReportPropertyChanging("language_description");
                _language_description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("language_description");
                Onlanguage_descriptionChanged();
            }
        }
        private global::System.String _language_description;
        partial void Onlanguage_descriptionChanging(global::System.String value);
        partial void Onlanguage_descriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="singspazeModel", Name="playlist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class playlist : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new playlist object.
        /// </summary>
        /// <param name="playlist_id">Initial value of the playlist_id property.</param>
        public static playlist Createplaylist(global::System.Int32 playlist_id)
        {
            playlist playlist = new playlist();
            playlist.playlist_id = playlist_id;
            return playlist;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 playlist_id
        {
            get
            {
                return _playlist_id;
            }
            set
            {
                if (_playlist_id != value)
                {
                    Onplaylist_idChanging(value);
                    ReportPropertyChanging("playlist_id");
                    _playlist_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("playlist_id");
                    Onplaylist_idChanged();
                }
            }
        }
        private global::System.Int32 _playlist_id;
        partial void Onplaylist_idChanging(global::System.Int32 value);
        partial void Onplaylist_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private Nullable<global::System.Int32> _user_id;
        partial void Onuser_idChanging(Nullable<global::System.Int32> value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String playlist_description
        {
            get
            {
                return _playlist_description;
            }
            set
            {
                Onplaylist_descriptionChanging(value);
                ReportPropertyChanging("playlist_description");
                _playlist_description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("playlist_description");
                Onplaylist_descriptionChanged();
            }
        }
        private global::System.String _playlist_description;
        partial void Onplaylist_descriptionChanging(global::System.String value);
        partial void Onplaylist_descriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> playlist_createdDatetime
        {
            get
            {
                return _playlist_createdDatetime;
            }
            set
            {
                Onplaylist_createdDatetimeChanging(value);
                ReportPropertyChanging("playlist_createdDatetime");
                _playlist_createdDatetime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("playlist_createdDatetime");
                Onplaylist_createdDatetimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _playlist_createdDatetime;
        partial void Onplaylist_createdDatetimeChanging(Nullable<global::System.DateTime> value);
        partial void Onplaylist_createdDatetimeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="singspazeModel", Name="playlisttosong")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class playlisttosong : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new playlisttosong object.
        /// </summary>
        /// <param name="playlisttosong_id">Initial value of the playlisttosong_id property.</param>
        /// <param name="playlist_id">Initial value of the playlist_id property.</param>
        /// <param name="song_id">Initial value of the song_id property.</param>
        /// <param name="playlistToSong_sequence">Initial value of the playlistToSong_sequence property.</param>
        public static playlisttosong Createplaylisttosong(global::System.Int32 playlisttosong_id, global::System.Int32 playlist_id, global::System.Int32 song_id, global::System.Int32 playlistToSong_sequence)
        {
            playlisttosong playlisttosong = new playlisttosong();
            playlisttosong.playlisttosong_id = playlisttosong_id;
            playlisttosong.playlist_id = playlist_id;
            playlisttosong.song_id = song_id;
            playlisttosong.playlistToSong_sequence = playlistToSong_sequence;
            return playlisttosong;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 playlisttosong_id
        {
            get
            {
                return _playlisttosong_id;
            }
            set
            {
                if (_playlisttosong_id != value)
                {
                    Onplaylisttosong_idChanging(value);
                    ReportPropertyChanging("playlisttosong_id");
                    _playlisttosong_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("playlisttosong_id");
                    Onplaylisttosong_idChanged();
                }
            }
        }
        private global::System.Int32 _playlisttosong_id;
        partial void Onplaylisttosong_idChanging(global::System.Int32 value);
        partial void Onplaylisttosong_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 playlist_id
        {
            get
            {
                return _playlist_id;
            }
            set
            {
                Onplaylist_idChanging(value);
                ReportPropertyChanging("playlist_id");
                _playlist_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("playlist_id");
                Onplaylist_idChanged();
            }
        }
        private global::System.Int32 _playlist_id;
        partial void Onplaylist_idChanging(global::System.Int32 value);
        partial void Onplaylist_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 song_id
        {
            get
            {
                return _song_id;
            }
            set
            {
                Onsong_idChanging(value);
                ReportPropertyChanging("song_id");
                _song_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("song_id");
                Onsong_idChanged();
            }
        }
        private global::System.Int32 _song_id;
        partial void Onsong_idChanging(global::System.Int32 value);
        partial void Onsong_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 playlistToSong_sequence
        {
            get
            {
                return _playlistToSong_sequence;
            }
            set
            {
                OnplaylistToSong_sequenceChanging(value);
                ReportPropertyChanging("playlistToSong_sequence");
                _playlistToSong_sequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("playlistToSong_sequence");
                OnplaylistToSong_sequenceChanged();
            }
        }
        private global::System.Int32 _playlistToSong_sequence;
        partial void OnplaylistToSong_sequenceChanging(global::System.Int32 value);
        partial void OnplaylistToSong_sequenceChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="singspazeModel", Name="recordlabel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class recordlabel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new recordlabel object.
        /// </summary>
        /// <param name="recordlabel_id">Initial value of the recordlabel_id property.</param>
        /// <param name="recordlabel_description">Initial value of the recordlabel_description property.</param>
        public static recordlabel Createrecordlabel(global::System.Int32 recordlabel_id, global::System.String recordlabel_description)
        {
            recordlabel recordlabel = new recordlabel();
            recordlabel.recordlabel_id = recordlabel_id;
            recordlabel.recordlabel_description = recordlabel_description;
            return recordlabel;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 recordlabel_id
        {
            get
            {
                return _recordlabel_id;
            }
            set
            {
                if (_recordlabel_id != value)
                {
                    Onrecordlabel_idChanging(value);
                    ReportPropertyChanging("recordlabel_id");
                    _recordlabel_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("recordlabel_id");
                    Onrecordlabel_idChanged();
                }
            }
        }
        private global::System.Int32 _recordlabel_id;
        partial void Onrecordlabel_idChanging(global::System.Int32 value);
        partial void Onrecordlabel_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String recordlabel_description
        {
            get
            {
                return _recordlabel_description;
            }
            set
            {
                Onrecordlabel_descriptionChanging(value);
                ReportPropertyChanging("recordlabel_description");
                _recordlabel_description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("recordlabel_description");
                Onrecordlabel_descriptionChanged();
            }
        }
        private global::System.String _recordlabel_description;
        partial void Onrecordlabel_descriptionChanging(global::System.String value);
        partial void Onrecordlabel_descriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="singspazeModel", Name="singinghistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class singinghistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new singinghistory object.
        /// </summary>
        /// <param name="singinghistory_id">Initial value of the singinghistory_id property.</param>
        /// <param name="user_id">Initial value of the user_id property.</param>
        /// <param name="song_id">Initial value of the song_id property.</param>
        /// <param name="artist_id">Initial value of the artist_id property.</param>
        /// <param name="singinghistory_date">Initial value of the singinghistory_date property.</param>
        public static singinghistory Createsinginghistory(global::System.Int32 singinghistory_id, global::System.Int32 user_id, global::System.Int32 song_id, global::System.Int32 artist_id, global::System.DateTime singinghistory_date)
        {
            singinghistory singinghistory = new singinghistory();
            singinghistory.singinghistory_id = singinghistory_id;
            singinghistory.user_id = user_id;
            singinghistory.song_id = song_id;
            singinghistory.artist_id = artist_id;
            singinghistory.singinghistory_date = singinghistory_date;
            return singinghistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 singinghistory_id
        {
            get
            {
                return _singinghistory_id;
            }
            set
            {
                if (_singinghistory_id != value)
                {
                    Onsinginghistory_idChanging(value);
                    ReportPropertyChanging("singinghistory_id");
                    _singinghistory_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("singinghistory_id");
                    Onsinginghistory_idChanged();
                }
            }
        }
        private global::System.Int32 _singinghistory_id;
        partial void Onsinginghistory_idChanging(global::System.Int32 value);
        partial void Onsinginghistory_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private global::System.Int32 _user_id;
        partial void Onuser_idChanging(global::System.Int32 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 song_id
        {
            get
            {
                return _song_id;
            }
            set
            {
                Onsong_idChanging(value);
                ReportPropertyChanging("song_id");
                _song_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("song_id");
                Onsong_idChanged();
            }
        }
        private global::System.Int32 _song_id;
        partial void Onsong_idChanging(global::System.Int32 value);
        partial void Onsong_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 artist_id
        {
            get
            {
                return _artist_id;
            }
            set
            {
                Onartist_idChanging(value);
                ReportPropertyChanging("artist_id");
                _artist_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("artist_id");
                Onartist_idChanged();
            }
        }
        private global::System.Int32 _artist_id;
        partial void Onartist_idChanging(global::System.Int32 value);
        partial void Onartist_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime singinghistory_date
        {
            get
            {
                return _singinghistory_date;
            }
            set
            {
                Onsinginghistory_dateChanging(value);
                ReportPropertyChanging("singinghistory_date");
                _singinghistory_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("singinghistory_date");
                Onsinginghistory_dateChanged();
            }
        }
        private global::System.DateTime _singinghistory_date;
        partial void Onsinginghistory_dateChanging(global::System.DateTime value);
        partial void Onsinginghistory_dateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="singspazeModel", Name="song")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class song : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new song object.
        /// </summary>
        /// <param name="song_id">Initial value of the song_id property.</param>
        /// <param name="song_genre">Initial value of the song_genre property.</param>
        /// <param name="song_languageId">Initial value of the song_languageId property.</param>
        /// <param name="song_albumId">Initial value of the song_albumId property.</param>
        /// <param name="song_artistId">Initial value of the song_artistId property.</param>
        /// <param name="song_length">Initial value of the song_length property.</param>
        /// <param name="song_contentPartnerId">Initial value of the song_contentPartnerId property.</param>
        /// <param name="song_recordLabelId">Initial value of the song_recordLabelId property.</param>
        /// <param name="song_releasedDate">Initial value of the song_releasedDate property.</param>
        /// <param name="song_status">Initial value of the song_status property.</param>
        /// <param name="song_addedDate">Initial value of the song_addedDate property.</param>
        public static song Createsong(global::System.Int32 song_id, global::System.Int32 song_genre, global::System.Int32 song_languageId, global::System.Int32 song_albumId, global::System.Int32 song_artistId, global::System.Decimal song_length, global::System.Int32 song_contentPartnerId, global::System.Int32 song_recordLabelId, global::System.DateTime song_releasedDate, global::System.Int32 song_status, global::System.DateTime song_addedDate)
        {
            song song = new song();
            song.song_id = song_id;
            song.song_genre = song_genre;
            song.song_languageId = song_languageId;
            song.song_albumId = song_albumId;
            song.song_artistId = song_artistId;
            song.song_length = song_length;
            song.song_contentPartnerId = song_contentPartnerId;
            song.song_recordLabelId = song_recordLabelId;
            song.song_releasedDate = song_releasedDate;
            song.song_status = song_status;
            song.song_addedDate = song_addedDate;
            return song;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 song_id
        {
            get
            {
                return _song_id;
            }
            set
            {
                if (_song_id != value)
                {
                    Onsong_idChanging(value);
                    ReportPropertyChanging("song_id");
                    _song_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("song_id");
                    Onsong_idChanged();
                }
            }
        }
        private global::System.Int32 _song_id;
        partial void Onsong_idChanging(global::System.Int32 value);
        partial void Onsong_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String song_originName
        {
            get
            {
                return _song_originName;
            }
            set
            {
                Onsong_originNameChanging(value);
                ReportPropertyChanging("song_originName");
                _song_originName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("song_originName");
                Onsong_originNameChanged();
            }
        }
        private global::System.String _song_originName;
        partial void Onsong_originNameChanging(global::System.String value);
        partial void Onsong_originNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String song_engName
        {
            get
            {
                return _song_engName;
            }
            set
            {
                Onsong_engNameChanging(value);
                ReportPropertyChanging("song_engName");
                _song_engName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("song_engName");
                Onsong_engNameChanged();
            }
        }
        private global::System.String _song_engName;
        partial void Onsong_engNameChanging(global::System.String value);
        partial void Onsong_engNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 song_genre
        {
            get
            {
                return _song_genre;
            }
            set
            {
                Onsong_genreChanging(value);
                ReportPropertyChanging("song_genre");
                _song_genre = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("song_genre");
                Onsong_genreChanged();
            }
        }
        private global::System.Int32 _song_genre;
        partial void Onsong_genreChanging(global::System.Int32 value);
        partial void Onsong_genreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 song_languageId
        {
            get
            {
                return _song_languageId;
            }
            set
            {
                Onsong_languageIdChanging(value);
                ReportPropertyChanging("song_languageId");
                _song_languageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("song_languageId");
                Onsong_languageIdChanged();
            }
        }
        private global::System.Int32 _song_languageId;
        partial void Onsong_languageIdChanging(global::System.Int32 value);
        partial void Onsong_languageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 song_albumId
        {
            get
            {
                return _song_albumId;
            }
            set
            {
                Onsong_albumIdChanging(value);
                ReportPropertyChanging("song_albumId");
                _song_albumId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("song_albumId");
                Onsong_albumIdChanged();
            }
        }
        private global::System.Int32 _song_albumId;
        partial void Onsong_albumIdChanging(global::System.Int32 value);
        partial void Onsong_albumIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 song_artistId
        {
            get
            {
                return _song_artistId;
            }
            set
            {
                Onsong_artistIdChanging(value);
                ReportPropertyChanging("song_artistId");
                _song_artistId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("song_artistId");
                Onsong_artistIdChanged();
            }
        }
        private global::System.Int32 _song_artistId;
        partial void Onsong_artistIdChanging(global::System.Int32 value);
        partial void Onsong_artistIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal song_length
        {
            get
            {
                return _song_length;
            }
            set
            {
                Onsong_lengthChanging(value);
                ReportPropertyChanging("song_length");
                _song_length = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("song_length");
                Onsong_lengthChanged();
            }
        }
        private global::System.Decimal _song_length;
        partial void Onsong_lengthChanging(global::System.Decimal value);
        partial void Onsong_lengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String song_keywords
        {
            get
            {
                return _song_keywords;
            }
            set
            {
                Onsong_keywordsChanging(value);
                ReportPropertyChanging("song_keywords");
                _song_keywords = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("song_keywords");
                Onsong_keywordsChanged();
            }
        }
        private global::System.String _song_keywords;
        partial void Onsong_keywordsChanging(global::System.String value);
        partial void Onsong_keywordsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String song_lyrics
        {
            get
            {
                return _song_lyrics;
            }
            set
            {
                Onsong_lyricsChanging(value);
                ReportPropertyChanging("song_lyrics");
                _song_lyrics = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("song_lyrics");
                Onsong_lyricsChanged();
            }
        }
        private global::System.String _song_lyrics;
        partial void Onsong_lyricsChanging(global::System.String value);
        partial void Onsong_lyricsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 song_contentPartnerId
        {
            get
            {
                return _song_contentPartnerId;
            }
            set
            {
                Onsong_contentPartnerIdChanging(value);
                ReportPropertyChanging("song_contentPartnerId");
                _song_contentPartnerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("song_contentPartnerId");
                Onsong_contentPartnerIdChanged();
            }
        }
        private global::System.Int32 _song_contentPartnerId;
        partial void Onsong_contentPartnerIdChanging(global::System.Int32 value);
        partial void Onsong_contentPartnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 song_recordLabelId
        {
            get
            {
                return _song_recordLabelId;
            }
            set
            {
                Onsong_recordLabelIdChanging(value);
                ReportPropertyChanging("song_recordLabelId");
                _song_recordLabelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("song_recordLabelId");
                Onsong_recordLabelIdChanged();
            }
        }
        private global::System.Int32 _song_recordLabelId;
        partial void Onsong_recordLabelIdChanging(global::System.Int32 value);
        partial void Onsong_recordLabelIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime song_releasedDate
        {
            get
            {
                return _song_releasedDate;
            }
            set
            {
                Onsong_releasedDateChanging(value);
                ReportPropertyChanging("song_releasedDate");
                _song_releasedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("song_releasedDate");
                Onsong_releasedDateChanged();
            }
        }
        private global::System.DateTime _song_releasedDate;
        partial void Onsong_releasedDateChanging(global::System.DateTime value);
        partial void Onsong_releasedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String song_thumbnail
        {
            get
            {
                return _song_thumbnail;
            }
            set
            {
                Onsong_thumbnailChanging(value);
                ReportPropertyChanging("song_thumbnail");
                _song_thumbnail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("song_thumbnail");
                Onsong_thumbnailChanged();
            }
        }
        private global::System.String _song_thumbnail;
        partial void Onsong_thumbnailChanging(global::System.String value);
        partial void Onsong_thumbnailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String song_picture
        {
            get
            {
                return _song_picture;
            }
            set
            {
                Onsong_pictureChanging(value);
                ReportPropertyChanging("song_picture");
                _song_picture = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("song_picture");
                Onsong_pictureChanged();
            }
        }
        private global::System.String _song_picture;
        partial void Onsong_pictureChanging(global::System.String value);
        partial void Onsong_pictureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 song_status
        {
            get
            {
                return _song_status;
            }
            set
            {
                Onsong_statusChanging(value);
                ReportPropertyChanging("song_status");
                _song_status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("song_status");
                Onsong_statusChanged();
            }
        }
        private global::System.Int32 _song_status;
        partial void Onsong_statusChanging(global::System.Int32 value);
        partial void Onsong_statusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime song_addedDate
        {
            get
            {
                return _song_addedDate;
            }
            set
            {
                Onsong_addedDateChanging(value);
                ReportPropertyChanging("song_addedDate");
                _song_addedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("song_addedDate");
                Onsong_addedDateChanged();
            }
        }
        private global::System.DateTime _song_addedDate;
        partial void Onsong_addedDateChanging(global::System.DateTime value);
        partial void Onsong_addedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String song_filePath
        {
            get
            {
                return _song_filePath;
            }
            set
            {
                Onsong_filePathChanging(value);
                ReportPropertyChanging("song_filePath");
                _song_filePath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("song_filePath");
                Onsong_filePathChanged();
            }
        }
        private global::System.String _song_filePath;
        partial void Onsong_filePathChanging(global::System.String value);
        partial void Onsong_filePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> song_price
        {
            get
            {
                return _song_price;
            }
            set
            {
                Onsong_priceChanging(value);
                ReportPropertyChanging("song_price");
                _song_price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("song_price");
                Onsong_priceChanged();
            }
        }
        private Nullable<global::System.Decimal> _song_price;
        partial void Onsong_priceChanging(Nullable<global::System.Decimal> value);
        partial void Onsong_priceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> song_view
        {
            get
            {
                return _song_view;
            }
            set
            {
                Onsong_viewChanging(value);
                ReportPropertyChanging("song_view");
                _song_view = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("song_view");
                Onsong_viewChanged();
            }
        }
        private Nullable<global::System.Int32> _song_view;
        partial void Onsong_viewChanging(Nullable<global::System.Int32> value);
        partial void Onsong_viewChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="singspazeModel", Name="status")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class status : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new status object.
        /// </summary>
        /// <param name="status_id">Initial value of the status_id property.</param>
        /// <param name="status_description">Initial value of the status_description property.</param>
        public static status Createstatus(global::System.Int32 status_id, global::System.String status_description)
        {
            status status = new status();
            status.status_id = status_id;
            status.status_description = status_description;
            return status;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 status_id
        {
            get
            {
                return _status_id;
            }
            set
            {
                if (_status_id != value)
                {
                    Onstatus_idChanging(value);
                    ReportPropertyChanging("status_id");
                    _status_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("status_id");
                    Onstatus_idChanged();
                }
            }
        }
        private global::System.Int32 _status_id;
        partial void Onstatus_idChanging(global::System.Int32 value);
        partial void Onstatus_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String status_description
        {
            get
            {
                return _status_description;
            }
            set
            {
                Onstatus_descriptionChanging(value);
                ReportPropertyChanging("status_description");
                _status_description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("status_description");
                Onstatus_descriptionChanged();
            }
        }
        private global::System.String _status_description;
        partial void Onstatus_descriptionChanging(global::System.String value);
        partial void Onstatus_descriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="singspazeModel", Name="user")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class user : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new user object.
        /// </summary>
        /// <param name="user_id">Initial value of the user_id property.</param>
        /// <param name="user_status">Initial value of the user_status property.</param>
        /// <param name="usergroup_id">Initial value of the usergroup_id property.</param>
        /// <param name="user_type">Initial value of the user_type property.</param>
        /// <param name="user_fbUserId">Initial value of the user_fbUserId property.</param>
        public static user Createuser(global::System.Int32 user_id, global::System.SByte user_status, global::System.Int32 usergroup_id, global::System.Int32 user_type, global::System.Int32 user_fbUserId)
        {
            user user = new user();
            user.user_id = user_id;
            user.user_status = user_status;
            user.usergroup_id = usergroup_id;
            user.user_type = user_type;
            user.user_fbUserId = user_fbUserId;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                if (_user_id != value)
                {
                    Onuser_idChanging(value);
                    ReportPropertyChanging("user_id");
                    _user_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("user_id");
                    Onuser_idChanged();
                }
            }
        }
        private global::System.Int32 _user_id;
        partial void Onuser_idChanging(global::System.Int32 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.SByte user_status
        {
            get
            {
                return _user_status;
            }
            set
            {
                Onuser_statusChanging(value);
                ReportPropertyChanging("user_status");
                _user_status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_status");
                Onuser_statusChanged();
            }
        }
        private global::System.SByte _user_status;
        partial void Onuser_statusChanging(global::System.SByte value);
        partial void Onuser_statusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 usergroup_id
        {
            get
            {
                return _usergroup_id;
            }
            set
            {
                Onusergroup_idChanging(value);
                ReportPropertyChanging("usergroup_id");
                _usergroup_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("usergroup_id");
                Onusergroup_idChanged();
            }
        }
        private global::System.Int32 _usergroup_id;
        partial void Onusergroup_idChanging(global::System.Int32 value);
        partial void Onusergroup_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_type
        {
            get
            {
                return _user_type;
            }
            set
            {
                Onuser_typeChanging(value);
                ReportPropertyChanging("user_type");
                _user_type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_type");
                Onuser_typeChanged();
            }
        }
        private global::System.Int32 _user_type;
        partial void Onuser_typeChanging(global::System.Int32 value);
        partial void Onuser_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_fbUserId
        {
            get
            {
                return _user_fbUserId;
            }
            set
            {
                Onuser_fbUserIdChanging(value);
                ReportPropertyChanging("user_fbUserId");
                _user_fbUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_fbUserId");
                Onuser_fbUserIdChanged();
            }
        }
        private global::System.Int32 _user_fbUserId;
        partial void Onuser_fbUserIdChanging(global::System.Int32 value);
        partial void Onuser_fbUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String user_firstname
        {
            get
            {
                return _user_firstname;
            }
            set
            {
                Onuser_firstnameChanging(value);
                ReportPropertyChanging("user_firstname");
                _user_firstname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("user_firstname");
                Onuser_firstnameChanged();
            }
        }
        private global::System.String _user_firstname;
        partial void Onuser_firstnameChanging(global::System.String value);
        partial void Onuser_firstnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String user_lastname
        {
            get
            {
                return _user_lastname;
            }
            set
            {
                Onuser_lastnameChanging(value);
                ReportPropertyChanging("user_lastname");
                _user_lastname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("user_lastname");
                Onuser_lastnameChanged();
            }
        }
        private global::System.String _user_lastname;
        partial void Onuser_lastnameChanging(global::System.String value);
        partial void Onuser_lastnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String user_login
        {
            get
            {
                return _user_login;
            }
            set
            {
                Onuser_loginChanging(value);
                ReportPropertyChanging("user_login");
                _user_login = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("user_login");
                Onuser_loginChanged();
            }
        }
        private global::System.String _user_login;
        partial void Onuser_loginChanging(global::System.String value);
        partial void Onuser_loginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String user_password
        {
            get
            {
                return _user_password;
            }
            set
            {
                Onuser_passwordChanging(value);
                ReportPropertyChanging("user_password");
                _user_password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("user_password");
                Onuser_passwordChanged();
            }
        }
        private global::System.String _user_password;
        partial void Onuser_passwordChanging(global::System.String value);
        partial void Onuser_passwordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String user_email
        {
            get
            {
                return _user_email;
            }
            set
            {
                Onuser_emailChanging(value);
                ReportPropertyChanging("user_email");
                _user_email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("user_email");
                Onuser_emailChanged();
            }
        }
        private global::System.String _user_email;
        partial void Onuser_emailChanging(global::System.String value);
        partial void Onuser_emailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> user_createdDatetime
        {
            get
            {
                return _user_createdDatetime;
            }
            set
            {
                Onuser_createdDatetimeChanging(value);
                ReportPropertyChanging("user_createdDatetime");
                _user_createdDatetime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_createdDatetime");
                Onuser_createdDatetimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _user_createdDatetime;
        partial void Onuser_createdDatetimeChanging(Nullable<global::System.DateTime> value);
        partial void Onuser_createdDatetimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> user_modifiedDatetime
        {
            get
            {
                return _user_modifiedDatetime;
            }
            set
            {
                Onuser_modifiedDatetimeChanging(value);
                ReportPropertyChanging("user_modifiedDatetime");
                _user_modifiedDatetime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_modifiedDatetime");
                Onuser_modifiedDatetimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _user_modifiedDatetime;
        partial void Onuser_modifiedDatetimeChanging(Nullable<global::System.DateTime> value);
        partial void Onuser_modifiedDatetimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> user_lastlogin
        {
            get
            {
                return _user_lastlogin;
            }
            set
            {
                Onuser_lastloginChanging(value);
                ReportPropertyChanging("user_lastlogin");
                _user_lastlogin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_lastlogin");
                Onuser_lastloginChanged();
            }
        }
        private Nullable<global::System.DateTime> _user_lastlogin;
        partial void Onuser_lastloginChanging(Nullable<global::System.DateTime> value);
        partial void Onuser_lastloginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String user_avartar
        {
            get
            {
                return _user_avartar;
            }
            set
            {
                Onuser_avartarChanging(value);
                ReportPropertyChanging("user_avartar");
                _user_avartar = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("user_avartar");
                Onuser_avartarChanged();
            }
        }
        private global::System.String _user_avartar;
        partial void Onuser_avartarChanging(global::System.String value);
        partial void Onuser_avartarChanged();

        #endregion

    
    }

    #endregion

    
}
